version: '3.8'

services:
  # PostgreSQL 데이터베이스
  postgres:
    image: postgres:13
    environment:
      POSTGRES_DB: leak_detection
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d leak_detection"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis 캐시/큐
  redis:
    image: redis:6-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # FastAPI 애플리케이션
  app:
    build: .
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://user:password@postgres:5432/leak_detection
      - REDIS_URL=redis://redis:6379
      - GEMINI_API_KEY=${GEMINI_API_KEY}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - .:/app
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  # Celery Worker
  celery-worker:
    build: .
    environment:
      - DATABASE_URL=postgresql://user:password@postgres:5432/leak_detection
      - REDIS_URL=redis://redis:6379
      - GEMINI_API_KEY=${GEMINI_API_KEY}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - .:/app
    command: celery -A celery_app worker --loglevel=info

  # Celery Beat (스케줄러)
  celery-beat:
    build: .
    environment:
      - DATABASE_URL=postgresql://user:password@postgres:5432/leak_detection
      - REDIS_URL=redis://redis:6379
      - GEMINI_API_KEY=${GEMINI_API_KEY}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - .:/app
    command: celery -A celery_app beat --loglevel=info

volumes:
  postgres_data:
  redis_data: 